name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        target:
        - x86_64-unknown-linux-gnu
        - x86_64-unknown-linux-musl
        include:
        - target: x86_64-unknown-linux-gnu
          os: ubuntu-latest
        - target: x86_64-unknown-linux-musl
          os: ubuntu-latest

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
    - uses: DeterminateSystems/nix-installer-action@main
    - uses: DeterminateSystems/magic-nix-cache-action@main
    - uses: DeterminateSystems/flake-checker-action@main
    - name: Build
      run: nix build .
  test-with-realdata:
    runs-on: ubuntu-latest

    steps:
    - uses: DeterminateSystems/nix-installer-action@main
    - name: Download toml
      run: curl https://raw.githubusercontent.com/takeokunn/awesome-yasunori/refs/heads/main/yasunori.toml > yasunori.toml
    - name: Generate the md
      run: |
        nix run github:satler-git/awesome-yasunori-readmegen -- yasunori.toml > yasunori.md
    - name: Update as an artifact
      uses: actions/upload-artifact@v4
      with:
        name: dist-markdown
        path: yasunori.md
  test:
    strategy:
      matrix:
        target:
        - x86_64-unknown-linux-gnu
        - x86_64-unknown-linux-musl
        - x86_64-pc-windows-msvc
        include:
        - target: x86_64-unknown-linux-gnu
          os: ubuntu-latest
        - target: x86_64-unknown-linux-musl
          os: ubuntu-latest
        - target: x86_64-pc-windows-msvc
          os: windows-latest

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
    - name: Setup Rust toolchain
      run: |
        rustup target add ${{ matrix.target }}
    - uses: Swatinem/rust-cache@v2
      with:
        prefix-key: "v0-rust-${{ matrix.target }}"
    - name: Test
      run: |
        cargo test